#!/bin/bash

trap "exit" SIGINT
trap "exit" SIGTERM

HOSTNAME=$(cat /etc/hostname)
if [ "pg_isready -d postgres -U postgres -h $MAIN_DCW | grep -q 'accepting connections'" ]; then

  EXPORTER=$(PGPASSWORD=$TOKEN psql -h $MAIN_DCW -U postgres -d postgres -AXtqc "SELECT HOST FROM EXPORTERS WHERE HOST='$HOSTNAME'";)

  if [ "$EXPORTER" == "$HOSTNAME" ]; then
    echo "Exporter already exists in database; continue"
  else
    PGPASSWORD=$TOKEN psql -h $MAIN_DCW -U postgres -d postgres -c "INSERT INTO EXPORTERS \
    (HOST,ACTIVE,DONE) \
    VALUES('$HOSTNAME','true','false');" > /dev/null 2>&1
  fi

  while true; do
    check=$(PGPASSWORD=$TOKEN psql -h $MAIN_DCW -U postgres -d postgres -AXtqc "SELECT RUNNING FROM STATE WHERE RUNNING='true'";)
    sleep .5
    if [[ $check == 'true' ]]; then
      echo "Got signal to start update check"    
      PGPASSWORD=$TOKEN psql -h $MAIN_DCW -U postgres -d postgres -c "UPDATE EXPORTERS SET DONE='false';" > /dev/null 2>&1
    else
      continue
    fi

    if [ -f "/app/EXCLUDE" ]; then
      #If exclude is present
      EXCLUDE=$(</app/EXCLUDE)
      /app/dockcheck.sh -e "$EXCLUDE" > /dev/null 2>&1
    else
      #If exclude is not present
      /app/dockcheck.sh > /dev/null 2>&1
    fi

    #Insert into database with hostname + containers
    while read -r line ; do
      PGPASSWORD=$TOKEN psql -h $MAIN_DCW -U postgres -d postgres -c "INSERT INTO CONTAINERS \
      (HOST,NAME,LATEST,ERROR,NEW) \
      VALUES('$HOSTNAME','$line','false','false','true');" > /dev/null 2>&1
    done < GotUpdates.txt
    rm -f GotUpdates.txt
    
    while read -r line ; do
      PGPASSWORD=$TOKEN psql -h $MAIN_DCW -U postgres -d postgres -c "INSERT INTO CONTAINERS \
      (HOST,NAME,LATEST,ERROR,NEW) \
      VALUES('$HOSTNAME','$line','true','false','false');" > /dev/null 2>&1
    done < NoUpdates.txt
    rm -f NoUpdates.txt

    while read -r line ; do
      PGPASSWORD=$TOKEN psql -h $MAIN_DCW -U postgres -d postgres -c "INSERT INTO CONTAINERS \
      (HOST,NAME,LATEST,ERROR,NEW) \
      VALUES('$HOSTNAME','$line','false','true','false');" > /dev/null 2>&1
    done < GotErrors.txt
    rm -f GotErrors.txt

    PGPASSWORD=$TOKEN psql -h $MAIN_DCW -U postgres -d postgres -c "UPDATE EXPORTERS SET DONE='true';" > /dev/null 2>&1
    PGPASSWORD=$TOKEN psql -h $MAIN_DCW -U postgres -d postgres -c "UPDATE STATE SET RUNNING = 'false';" > /dev/null 2>&1
  done

else
  echo "Cannot connect to database, check password and connectivity and restart the exporter"
fi

#if [ $? -eq 0 ]; then echo "$(date). ran without error." >> /app/dockcheck.log; else echo "$(date). got errors." >> /app/dockcheck.log ; fi
